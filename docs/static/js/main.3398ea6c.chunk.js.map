{"version":3,"sources":["components/AddCategory.js","Helppers/getFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getFetchGifs","cat","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setCategories","category","ReactDOM","render","document","getElementById"],"mappings":"oMAOaA,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAEHC,mBAAS,CAAC,KAFP,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAoBvC,OACI,aADS,CACT,QAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAQ,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAGhCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,8BCVlBG,EAAY,uCAAI,WAAQC,GAAR,uBAAAC,EAAA,6DAEpBC,EAFoB,0FAEsEC,UAAWH,GAFjF,sBAGPI,MAAOF,GAHA,cAGpBG,EAHoB,gBAIHA,EAAKC,OAJF,uBAIlBC,EAJkB,EAIlBA,KACFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGxCa,QAAQC,IAAIhB,GAZc,kBAanBQ,GAbmB,4CAAJ,sDCAbS,EAAc,SAAC,GAAqB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIlC,OAFAa,QAAQC,IAAKJ,EAAOV,GAGhB,sBAAKgB,UAAW,6CAAhB,UACI,qBAAKC,IAAOjB,EAAMkB,IAAOR,IACzB,kCAAMA,EAAN,WCHCS,EAAU,SAAC,GAAa,IAAXrB,EAAU,EAAVA,IAAU,ECFR,SAAEA,GAAS,MAETd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IALsB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAuBnC,OAfAC,qBAAU,WAEN1B,EAAcC,GACT0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAAEtB,IAGEuB,EDlB2BK,CAAe5B,GAAzCsB,EAHwB,EAGxBA,QAAeT,EAHS,EAGfN,KAEjB,OACI,qCACA,qBAAIW,UAAW,wCAAf,cAA0DlB,EAA1D,QAEEsB,GAAW,mBAAGJ,UAAW,mCAAd,0BAGb,qBAAKA,UAAW,kDAAhB,SAEML,EAAOJ,KAAM,SAAEC,GAAF,OACR,wBAAE,EAAF,2BACUA,GADV,IAEKmB,IAAQnB,EAAIC,eEnBvBmB,EAAe,WAAK,MAIO5C,mBAAS,CAAC,UAJjB,mBAItB6C,EAJsB,KAIVC,EAJU,KAa7B,OACI,qCACI,kDACA,cAAC,EAAD,CAAa/C,OAAS+C,IAEtB,uBAEA,6BAEQD,EAAWtB,KAAK,SAAAwB,GAAQ,OACtB,cAAC,EAAD,CAEAjC,IAAMiC,GADAA,Y,MCrB5BC,IAASC,OAKP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3398ea6c.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n  //props.setCategories abajo y aca props. mmas comun desestructurar aca\r\nexport const AddCategory = ({ setCat }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(['']); // PARA Q NO QUEDE UNDEFINED EN ESTADO INICIAL\r\n\r\n    const handleImputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    // atrapo el evento de onSubmit e\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCat (cats => [inputValue, ...cats]);\r\n// se puede llamar como un callback q tiene el estado anterior (cats)\r\n// sino no tengo acceso añ arreglo de categories acá. otra es llamarlo desde las props. a categories\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (     // mando el primer evento de onSubmit \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange={ handleImputChange }\r\n            />  \r\n        </form>\r\n    )   \r\n}\r\n AddCategory.propTypes = {\r\n        setCat: PropTypes.func.isRequired\r\n    }       // MAYUS x q hace referencia al paquete q importamos\r\n","\r\n\r\nexport  const getFetchGifs  = async ( cat ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=0W9kUPNYYyTU5W7kv7pvCJsbbntKKC0X&q=${ encodeURI( cat )  }&limit=10`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return{ \r\n          id: img.id,\r\n          title: img.title,    \r\n          url: img.images?.downsized_medium.url\r\n        }    // ? si vienen las imagenes q lo utilice          \r\n    });\r\n    console.log(cat);\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    console.log( title, url );\r\n    \r\n    return (\r\n        <div className =\"card animate__animated animate__fadeInDown\">\r\n            <img src= { url } alt= { title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ cat }) => {\r\n\r\n                                    //llamo custom hook\r\n    const { loading, data: images } = useFetchGifs ( cat );\r\n    \r\n    return (\r\n        <>\r\n        <h3 className =\"animate__animated animate__fadeInDown\"> { cat }  </h3>\r\n\r\n        { loading && <p className =\"animate__animated animate__flash\"> Cargando...</p>}\r\n\r\n\r\n        <div className =\"card-grid animate__animated animate__fadeInDown\">\r\n            \r\n            { images.map ( ( img ) => ( \r\n                   < GifGridItem \r\n                        { ...img } // spread para enviar las propiedades de las imagenes como una propiedad indepte\r\n                        key = { img.id }                    \r\n                   />\r\n                ))\r\n            }          \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/*\r\n<ol>\r\n // desestructuro pa no poner i.id y i.title \r\n     { images.map ( ({ id, title }) => ( \r\n        <li key = { id }> {title} </li>\r\n        ))\r\n     } \r\n</ol> */\r\n\r\n //  const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => { // PARA QUE no se ejecute la funcion cada vez que se modifica algo de este componente ej count\r\n    //     getGifs( cat )  //.then(gif  => setImages(gif));\r\n    //     .then(setImages);\r\n    //     }, [ cat ]); // si la categoria cambia vuelve a ejecutar esto.. no es este caso\r\n","// import React from 'react'; no es necesearia a menos q regresemos jsx (etiq html x ej)\r\nimport { useState, useEffect } from 'react';\r\nimport { getFetchGifs } from '../Helppers/getFetchGifs';\r\n\r\nexport const useFetchGifs = ( cat ) => { // los hoocks son funciones\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true    // estado inicial\r\n    });\r\n\r\n    useEffect(() => { // efecto para q solo cambie cuando cambia cat\r\n\r\n        getFetchGifs( cat )   //hago peticion http api\r\n            .then(imgs => { // tenemos las imagenes                 \r\n\r\n                setstate({ // cambio la info.. setstate dispara renderizacion en el componente GifGrid\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n              \r\n            });\r\n\r\n    }, [ cat ]);\r\n\r\n   \r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'; // rafc tab crea todo\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categories = ['Perro', 'Gato', 'Caballo'];\r\n    \r\n    const [categories, setCategories] = useState(['Perro']);\r\n\r\n    /* const handleAdd = ( ) => {\r\n        //setCategories ('vaca');  así le cambio el estado a categories a string\r\n        //setCategories ([...categories, 'vaca']);\r\n        // recibe estado anetior del arreglo y lo reemplaza x un nuevo arreglo con los vlores ant + el nuevo\r\n        setCategories (cats => [...cats, 'vaca']);} */\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp   </h2>\r\n            <AddCategory setCat={ setCategories } /> \r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                      <GifGrid \r\n                      key={ category }\r\n                      cat={ category } /> \r\n                    )   \r\n                        /* return <li key ={category}>{category}</li>\r\n                        //          id unico          elemento  */      \r\n                }\r\n\r\n            </ol>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n// 0W9kUPNYYyTU5W7kv7pvCJsbbntKKC0X","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  /* // para q react sea mas quisquilloso\n  <React.StrictMode> \n   <App />   \n  </React.StrictMode>, */\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}